version: '3'
services:
  front-rh:
    build:
      context: front-rh
      dockerfile: Dockerfile
    container_name: front-rh
    volumes:
      - ./frontrhdata:/usr/src/app
    ports:
      - 4998:80
    networks:
      - backend
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    image: flask-python:3.7
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 2999
      MONGODB_DATABASE: wevioo
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: root
      MONGODB_HOSTNAME: mongodb
    volumes:
      - ./appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: wevioo
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - ./mongodbdata:/data/db
    networks:
      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "8899:80"
      - "4435:443"
    volumes:
      - ./nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
